package com.csit360.project.Services;

import com.csit360.project.DTOs.NotesDtos.NotesData;
import com.csit360.project.Entities.NotesEntity;
import com.csit360.project.Repositories.NotesRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class NotesService {


    @Autowired
    private NotesRepository notesRepository;

    public List<NotesData> getAllNotes() {
        return notesRepository.findAll() // Fetches all NotesEntity objects
                .stream() // Creates a stream to process the list
                .map(this::mapEntityToData) // Maps each entity to a DTO
                .collect(Collectors.toList()); // Collects the results into a new list
    }

    /**
     * Creates a new note, saves it, and returns the resulting DTO.
     */
    public NotesData createNote(NotesData noteData) {
        NotesEntity newNoteEntity = mapDataToEntity(noteData); // Map DTO to an entity
        NotesEntity savedEntity = notesRepository.save(newNoteEntity); // Save the entity to the DB
        return mapEntityToData(savedEntity); // Map the saved entity (now with an ID) back to a DTO
    }

    /**
     * Deletes a note by its ID.
     */
    public void deleteNoteById(Long id) {
        notesRepository.deleteById(id);
    }

    /**
     * Converts a NotesEntity object from the database into a NotesData DTO for the client.
     */
    private NotesData mapEntityToData(NotesEntity entity) {
        return new NotesData(entity.getId(), entity.getContent());
    }

    /**
     * Converts a NotesData DTO from the client into a NotesEntity for the database.
     */
    private NotesEntity mapDataToEntity(NotesData data) {
        NotesEntity entity = new NotesEntity();
        // We don't set the ID because it will be generated by the database
        entity.setContent(data.getContent());
        return entity;
    }
}